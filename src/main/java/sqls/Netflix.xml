<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Netflix">
	 
	 <!-- top 20 movie정보 db에 넣기 -->
	 <insert id="insertNetflixcontent" parameterType="java.util.List">
        insert into movie (id, title, overview, posterpath, popularity, releasedate)
        values 
		<foreach collection="list" item="content" separator=","> <!-- 리스트 넘겨받아서 저장 -->
            (
            #{content.id},
            #{content.title},
            #{content.overview},
            #{content.posterpath},
            #{content.popularity},
            #{content.releasedate}
            )
        </foreach>
         on duplicate key update id = id; <!-- 중복된 키가 발생하면 아무 동작도 수행하도록 한다 --> 
    </insert>
    
    <!-- top 20 tv정보 db에 넣기 -->
	 <insert id="insertNetflixtvcontent" parameterType="java.util.List">
        insert into tv (id, title, overview, posterpath, popularity, releasedate)
        values 
		<foreach collection="list" item="content" separator=","> <!-- 리스트 넘겨받아서 저장 -->
            (
            #{content.id},
            #{content.title},
            #{content.overview},
            #{content.posterpath},
            #{content.popularity},
            #{content.releasedate}
            )
        </foreach>
         on duplicate key update id = id; <!-- 중복된 키가 발생하면 아무 동작도 수행하도록 한다 --> 
    </insert>
    
    <!-- movie 정보 디테일 -->
    <select id="netflixdetail" parameterType="java.lang.Long" resultType="ssg.com.a.dto.NetflixContentDto">
		select id, title, overview, posterpath, popularity, releasedate
		from movie
		where id = #{id}	
	</select>
	
	<!-- TV 정보 디테일 -->
    <select id="netflixtvdetail" parameterType="java.lang.Long" resultType="ssg.com.a.dto.NetflixTvDto">
		select id, title, overview, posterpath, popularity, releasedate
		from tv
		where id = #{id}	
	</select>
	
	<!-- 넷플릭스 디테일 댓글 추가 -->
	<insert id="commentWrite" parameterType="ssg.com.a.dto.NetflixComment">
		insert into netflixcomment(seq, id, content, wdate, rating)
		values (#{seq}, #{id}, #{content}, now(), #{rating})
	</insert>
	
	
	<!-- 넷플릭스 디테일창 댓글 리스트, 최신순으로 (인기 댓글순이나 다른걸로 바꿔도됨) -->
	<select id="commentList" parameterType="java.lang.Long" resultType="ssg.com.a.dto.NetflixComment">
		select comment_id, seq, id, content, wdate, rating
		from netflixcomment
		where seq = #{seq}
		order by wdate desc 
	</select>
	
	<!-- 넷플릭스 댓글 삭제 -->
	<delete id="commentDelete" parameterType="ssg.com.a.dto.NetflixComment">
		delete from netflixcomment
		where comment_id = #{comment_id}
	</delete>
	
	<!-- 평균 평점 불러오기 -->
	<select id="avg" parameterType="java.lang.Long" resultType="Double">
		select avg(rating) 
		from netflixcomment
		where seq = #{seq};
	</select>
	
	<!-- 즐겨찾기 추가 -->
	<insert id="favorite" parameterType="ssg.com.a.dto.FavoriteDto">
		<!-- ignore pk(id, content_id) 겹치면 무시 -->
		insert ignore into favorite(id, content_id, title, favorite) 
		values (#{id}, #{content_id}, #{title}, 1)
	</insert>
	
	<!-- 즐겨찾기 리스트 불러오기 -->
	<select id="favoriteList" parameterType="String" resultType="ssg.com.a.dto.FavoriteDto">
		select id, content_id, title, favorite
		from favorite
		where id = #{id} and favorite = 1;
	</select>
	
	<!-- 즐겨찾기 삭제 -->
	<delete id="favoriteDelete" parameterType="ssg.com.a.dto.FavoriteDto">
		delete from favorite
		where id = #{id} and content_id = #{content_id}
	</delete>
</mapper>